apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.test.actionitem.breezometer"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        dataBinding { // Enable dataBinding
            enabled = true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

/* Core */
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    // Android Support
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    // RX Java
    api "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    api "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    api "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin}"

/* Life Cycle */
    implementation "android.arch.lifecycle:common-java8:1.1.1"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"


/* ----------- Network ---------- */
    // Gson
    implementation "com.google.code.gson:gson:${versions.gson}"
    // Okhttp
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    // Retrofit
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"// convert a retrofit call object to a RxJava object
    api "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    compileOnly "org.jetbrains:annotations:${versions.annotations}"//The code generated by the plugin uses jetbrains annotations
    testCompileOnly "org.jetbrains:annotations:${versions.annotations}"//The code generated by the plugin uses jetbrains annotations


/* --------- UI --------- */
    // Material gadgets
    implementation "com.google.android.material:material:${versions.material}"
    // ConstraintLayout
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    // SpeedometerGauge
    implementation 'com.cardiomood.android:android-widgets:0.1.1'

/* --------- DI --------- */
    // Dagger2
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"// if you use the support libraries
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
/* Tools */
    implementation "com.jakewharton.timber:timber:${versions.timber}"


    kapt "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'// ReactiveStreams support for LiveData (convert Observables to LiveData)
}